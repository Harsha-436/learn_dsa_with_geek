Arrays are fundamental data structures in computer programming that allow you to store and manipulate collections of data. 
An array is a contiguous memory location that holds a fixed number of items, each of the same data type. 
The elements in an array are accessed by their index or position in the array, starting from zero.
                                      ---------------------
                                      |  1 |  2 |  3 | 4  |   
                                      ---------------------
Here are some key characteristics of arrays:
1. Homogeneous Elements:
   - All elements in an array must be of the same data type (e.g., integers, floats, characters). This is because arrays are allocated a fixed amount of memory based on the data type.
2. Fixed Size:
   - Arrays have a fixed size, which is determined when the array is declared. Once the size is set, it cannot be changed during the program execution. If you need a dynamic-size collection, 
    you might consider other data structures like linked lists or dynamic arrays.
3. Contiguous Memory Allocation:
   - Array elements are stored in contiguous memory locations. This means that the memory addresses of the elements are consecutive, allowing for efficient access through indexing.
4. Zero-Based Indexing:
   - Array indices start from 0. The first element is at index 0, the second at index 1, and so on. This convention is followed in many programming languages.
5. Random Access:
   - Arrays provide constant-time access to any element using its index. This is known as random access because you can directly jump to any element without traversing the entire array.
6. Sequential Storage:
   - Elements in an array are stored sequentially in memory. This sequential storage and constant-time access make arrays suitable for a variety of applications.
7. Efficient for Iteration:
   - Arrays are particularly efficient for operations that involve iterating through all elements, as you can easily access each element using its index.
8. Declaration and Initialization:
   - Arrays are declared and initialized with a specific size and data type. For example, in C or C++, you might declare an integer array like this:  

Why Array Data Structure is needed?
Assume there is a class of five students and if we have to keep records of their marks in examination then, we can do this by declaring five variables individual and keeping track of records but what 
if the number of students becomes very large, it would be challenging to manipulate and maintain the data.What it means is that, we can use normal variables (v1, v2, v3, ..) when we have a small number of objects. 
But if we want to store a large number of instances, it becomes difficult to manage them with normal variables. The idea of an array is to represent many instances in one variable..

Understanding arrays is essential for many programming tasks, and they serve as building blocks for more complex data structures and algorithms.

